apiVersion: v1
kind: Namespace
metadata:
  name: sileht
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: sileht
  labels:
    appId: appId
spec:
  ports:
  - port: 8080
    name: http
  selector:
    appId: appId
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    appId: appId
    envId: envId
    ownerId: sileht
  name: app-deploy
  namespace: sileht
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      appId: appId
      envId: envId
      ownerId: sileht
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        appId: appId
        envId: envId
        ownerId: sileht
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: QOVERY_BRANCH_NAME
          value: master
        - name: QOVERY_IS_PRODUCTION
          value: "True"
        image: jmalloc/echo-server
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        name: app-container
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 256m
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts: []
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes: []
#---
#apiVersion: "security.istio.io/v1beta1"
#kind: "PeerAuthentication"
#metadata:
#  name: "sileht"
#  namespace: sileht
#spec:
#  mtls:
#    mode: STRICT
#---
#apiVersion: security.istio.io/v1beta1
#kind: AuthorizationPolicy
#metadata:
#  name: namespace-isolation
#  namespace: sileht
#spec:
#  action: ALLOW
#  rules:
#  - from:
#    - source:
#        namespaces:
#        - sileht
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: app-issuer
  # NOTE(sileht): issuer must be in istio-system, this sucks for isolation...
  namespace: istio-system
  labels:
    ownerId: sileht
    fqdn: kind.sileht.net
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: mabaakouk@qovery.com
    privateKeySecretRef:
      name: kind-issuer-key
    solvers:
      - http01:
          ingress:
            class: istio
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: app-gateway-cert
  # NOTE(sileht): cert must be in istio-system, this sucks for isolation...
  namespace: istio-system
  labels:
    ownerId: sileht
    fqdn: "app.kin.sileht.net"
spec:
  secretName: app-gateway-cert-secret
  issuerRef:
    name: app-issuer
    kind: Issuer
  dnsNames:
    - app.kind.sileht.net
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: app-gateway
  namespace: sileht
  annotations:
    kubernetes.io/ingress.class: istio
spec:
  tls:
    - hosts:
      - "app.kind.sileht.net"
      secretName: app-gateway-cert-secret
  rules:
  - host: app.kind.sileht.net
    http:
      paths:
      - path: /
        backend:
          serviceName: app-service
          servicePort: 8080
